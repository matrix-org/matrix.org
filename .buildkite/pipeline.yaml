steps:
  # fetch the latest spec build, and apply styling to it.
  # This step also sets up the swagger API.
  - label: ":books: Spec"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          environment:
            - "BUILDKITE_ACCESS_TOKEN"
    command:
      - python3 -m venv env
      - env/bin/pip install requests
      - ". env/bin/activate; scripts/update_docs.sh"
      - tar -czf styled-docs.tar.gz content/docs
    artifact_paths:
      - styled-docs.tar.gz

  # Run jekyll. We run this in a custom docker image - see dockerfile in this directory.
  - label: ":jekyll: jekyll"
    plugins:
      - docker#v3.0.1:
          image: "matrixdotorg/matrixdotorg-build:0.2"
    command:
      # run jekyll to generate the rest of the site.
      # This will generate stuff under ./jekyll/_site.
      - . /env/bin/activate
      - ./jekyll/generate.sh
      - cp -rf ./pre-generated/* jekyll/_site/
      - tar -czf jekyll-site.tar.gz jekyll/_site
    artifact_paths:
      - jekyll-site.tar.gz

  # Run gatsby. We also use a custom docker image for this, to avoid
  # installing the entirety of npmjs for each build.
  - label: ":gatsby: gatsby"
    plugins:
      - docker#v3.0.1:
          image: "matrixdotorg/matrixdotorg-gatsby:latest"
          mount-checkout: false
          volumes:
            - "./gatsby:/workdir"
          always_pull: true
    commands:
      - ln -s /opt/gatsby/node_modules .
      - gatsby build
      - tar -czf gatsby-site.tar.gz public
    artifact_paths:
      - gatsby/gatsby-site.tar.gz

  - label: ":books: Implementation Guides"
    plugins:
      - docker#v3.0.1:
          image: "buildpack-deps"
    commands:
      - cd implementation-guides
      - wget https://github.com/rust-lang/mdBook/releases/download/v0.4.1/mdbook-v0.4.1-x86_64-unknown-linux-gnu.tar.gz
      - tar -xf mdbook-v0.4.1-x86_64-unknown-linux-gnu.tar.gz
      - ./mdbook build server -d /workdir/implementation-guides/implementation-guides/server
      - ./mdbook build widgets -d /workdir/implementation-guides/implementation-guides/widgets
      - tar -czf implementation-guides.tar.gz implementation-guides
    artifact_paths:
      - implementation-guides/implementation-guides.tar.gz

  - wait

  # Merge the three sets of outputs together, together
  # with the existing static stuff in `content`.
  - label: ":package: package"
    command:
      - buildkite-agent artifact download styled-docs.tar.gz .
      - buildkite-agent artifact download jekyll-site.tar.gz .
      - buildkite-agent artifact download gatsby/gatsby-site.tar.gz .
      - buildkite-agent artifact download implementation-guides/implementation-guides.tar.gz .
      - tar -xzvf styled-docs.tar.gz
      - tar -xzvf jekyll-site.tar.gz
      - cp -r jekyll/_site/{css,guides,howtos,projects} content/docs
      - tar -C content --strip-components=1 -xzf gatsby/gatsby-site.tar.gz
      - tar -C content -xzf implementation-guides/implementation-guides.tar.gz
      - tar -czf content.tar.gz content
      - free        # debug for buildkite oom issue
    artifact_paths:
      - content.tar.gz
